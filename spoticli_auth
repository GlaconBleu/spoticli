#!/bin/bash
set -o nounset

SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"
source $SCRIPTPATH/spoticli_common

##################################
### if config file exists : break
##################################

if [ ! -d "$local_prefix" ]; then
    echo "Creating $local_prefix ..."
    mkdir -p "$local_prefix" 
fi

if [ -e "$token_file" ]; then
    echo "A token file was found : $token_file"
    echo "Please remove it manually if you want to reauthenticate"
    exit 1 
fi

###################
### Generate state
###################

state="$(head -c 2050 /dev/urandom | shasum | cut -f 1 -d " ")"

######################
### Send auth request
######################

p_1="client_id=${client_id}"
p_2="response_type=code" 
p_3="redirect_uri=http://localhost:8080/spoticli"
p_4="scope=user-read-recently-played user-top-read user-library-modify user-library-read playlist-read-private playlist-modify-public playlist-modify-private playlist-read-collaborative user-read-email user-read-birthdate user-read-private user-read-playback-state user-modify-playback-state user-read-currently-playing app-remote-control streaming user-follow-read user-follow-modify"
p_5="state=$state" 


p_3="$(echo "$p_3" | sed -e "s/ /%20/g;s/:/%3A/g;s/\//%2F/g")"
p_4="$(echo "$p_4" | sed -e "s/ /%20/g;s/:/%3A/g;s/\//%2F/g")"

url="${spotify_auth}/fr/authorize?${p_1}&${p_2}&${p_3}&${p_4}&${p_5}"

echo "You will now be redirected to spotify ..."

$browser $url

#######################
### Retrieve Tokens
#######################

code=`socat TCP4-LISTEN:8080 EXEC:$SCRIPTPATH/spoticli_authhttpd 2>&1 >/dev/null`

if [[ ! -z $code ]]; then
    #echo "Code retrieved: '$code'"

    token_response=$(curl --silent --show-error \
        --data grant_type=authorization_code \
        --data "code=${code}" \
        --data "${p_3}" \
        --data "client_id=${client_id}" \
        --data "client_secret=${client_secret}"\
        ${spotify_auth}/api/token)

    error=$(echo $token_response | jq --raw-output .error)

    if [[ $error != "null" ]]; then
        echo "Error while getting access token:" >&2
        echo " server returned: $error" >&2
        exit -1
    fi

    access_token=$(echo $token_response | jq --raw-output .access_token)
    refresh_token=$(echo $token_response | jq --raw-output .refresh_token)
    timestamp="$(date +%s)"

    echo "#!/bin/bash" > $token_file
    echo "timestamp=${timestamp}" >> $token_file
    echo "access_token=$access_token" >> $token_file
    echo "refresh_token=$refresh_token" >> $token_file
else
    echo "Error while retrieving auth code" >&2
fi
